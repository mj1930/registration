{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/registration/registration.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    HomepageComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { ModuleWithProviders } from '@angular/core';\nimport { componentFactoryName } from '@angular/compiler';\nimport { RegistrationComponent } from '../app/registration/registration.component';\nimport { HomepageComponent } from '../app/homepage/homepage.component';\n\nexport const appRoutes: Routes = [\n    // {\n    //     path: '',\n    //     component: HomepageComponent\n    // },\n    {\n        path: '',\n        component: RegistrationComponent\n    }\n]\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes, { useHash: true });","module.exports = \"\"","module.exports = \"<div class=\\\"main\\\">\\n  <h2>Shopping (unordered) list</h2>\\n\\n  <p>Paragraph for reference, paragraph for reference, paragraph for reference,\\n  paragraph for reference, paragraph for reference, paragraph for reference.</p>\\n  \\n  <ul>\\n    <li>Humous</li>\\n    <li>Pitta</li>\\n    <li>Green salad</li>\\n    <li>Halloumi</li>\\n  </ul>\\n  \\n  <h2>Recipe (ordered) list</h2>\\n  \\n  <p>Paragraph for reference, paragraph for reference, paragraph for reference, \\n  paragraph for reference, paragraph for reference, paragraph for reference.</p>\\n  \\n  <ol>\\n    <li>Toast pitta, leave to cool, then slice down the edge.</li>\\n    <li>Fry the halloumi in a shallow, non-stick pan, until browned on both sides.</li>\\n    <li>Wash and chop the salad.</li>\\n    <li>Fill pitta with salad, humous, and fried halloumi.</li>\\n  </ol>\\n  \\n  <h2>Ingredient description list</h2>\\n  \\n  <p>Paragraph for reference, paragraph for reference, paragraph for reference, \\n  paragraph for reference, paragraph for reference, paragraph for reference.</p>\\n  \\n  <dl>\\n    <dt>Humous</dt>\\n    <dd>A thick dip/sauce generally made from chick peas blended with tahini, lemon juice, salt, garlic, and other ingredients.</dd>\\n    <dt>Pitta</dt>\\n    <dd>A soft, slightly leavened flatbread.</dd>\\n    <dt>Halloumi</dt>\\n    <dd>A semi-hard, unripened, brined cheese with a higher-than-usual melting point, usually made from goat/sheep milk.</dd>\\n    <dt>Green salad</dt>\\n    <dd>That green healthy stuff that many of us just use to garnish kebabs.</dd>\\n  </dl>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"main\\\">\\n  <!-- Sign up form -->\\n  <section class=\\\"signup\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"signup-content\\\">\\n              <div class=\\\"signup-form\\\">\\n                  <h2 class=\\\"form-title\\\">Registration Form</h2>\\n                  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register(registerForm.value)\\\">\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\"><i class=\\\"fas fa-user\\\"></i></label>\\n                          <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"Your Name\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"email\\\"><i class=\\\"fas fa-envelope-square\\\"></i></label>\\n                          <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Your Email\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"contact_phone\\\"><i class=\\\"fas fa-phone-square\\\"></i></label>\\n                          <input type=\\\"text\\\" name=\\\"contact_phone\\\" id=\\\"contact_phone\\\" formControlName=\\\"number\\\" placeholder=\\\"Contact Number\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"course_name\\\"><i class=\\\"fas fa-graduation-cap\\\"></i></label>\\n                        <input type=\\\"text\\\" name=\\\"course_name\\\" id=\\\"course_name\\\" formControlName=\\\"course_name\\\" placeholder=\\\"Course Name\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"branch_name\\\"><i class=\\\"fas fa-user-graduate\\\"></i></label>\\n                        <input type=\\\"text\\\" name=\\\"branch_name\\\" id=\\\"branch_name\\\" formControlName=\\\"branch_name\\\" placeholder=\\\"Course Branch\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"date_range\\\"><i class=\\\"fas fa-calendar-alt\\\"></i></label>\\n                        <input type=\\\"text\\\" name=\\\"date_range\\\" id=\\\"date_range\\\" formControlName=\\\"course_year\\\" placeholder=\\\"Course Year\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"school\\\"><i class=\\\"fas fa-school\\\"></i></label>\\n                        <input type=\\\"text\\\" name=\\\"school\\\" id=\\\"school\\\" formControlName=\\\"college_name\\\" placeholder=\\\"College Name\\\"/>\\n                      </div>\\n                      <div class=\\\"form-group form-button\\\">\\n                          <input type=\\\"submit\\\" name=\\\"signup\\\" id=\\\"signup\\\" class=\\\"form-submit\\\" [disabled]=\\\"!registerForm.valid\\\" value=\\\"Register\\\"/>\\n                      </div>\\n                  </form>\\n              </div>\\n              <div class=\\\"signup-image\\\">\\n                  <figure><img src=\\\"../../assets/images/signup-image.jpg\\\" alt=\\\"sing up image\\\"></figure>\\n              </div>\\n          </div>\\n      </div>\\n  </section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators as Validators, AbstractControl } from '@angular/forms';\nimport { RegistrationService } from './registration.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n  providers: [RegistrationComponent]\n})\nexport class RegistrationComponent implements OnInit {\n\n  registerForm: FormGroup;\n  registerService: Promise<any>;\n\n  constructor(private formBuilder: FormBuilder, private service: RegistrationService) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.compose([Validators.required])],\n      number: ['', Validators.compose([Validators.required])],\n      course_name: ['', Validators.compose([Validators.required])],\n      email: ['', Validators.compose([Validators.required])],\n      branch_name: ['', Validators.compose([Validators.required])],\n      course_year: ['', Validators.compose([Validators.required])],\n      college_name: ['', Validators.compose([Validators.required])]\n    });\n  }\n\n  register(data) {\n    if (!this.registerForm.valid) {\n      alert('Please fill all details');\n    }\n\n    this.registerService = this.service.register(data).then((res: any) => {\n      if (res.status === 200) {\n        alert('data saved');\n      } else if (res.status === 202) {\n        alert('user already registerd');\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http, Response } from '@angular/http';\nimport { environment } from './../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private _router: Router, private http: Http) { }\n  public BASE_URL: string = environment.config.BASE_URL;\n\n  register(userData) {\n    return this.http.post(`${this.BASE_URL}user/register`, {userData}).\n      toPromise().then((res: Response) => res.json());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  config: {\n    BASE_URL: 'http://13.233.78.91:3000/'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}